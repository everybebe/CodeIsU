package team.tttt.pms.project.storage.service.Impl;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Service;

import team.tttt.pms.common.enums.ServiceResult;
import team.tttt.pms.common.vo.StorageVO;
import team.tttt.pms.project.storage.mapper.PmsStorageMapper;
import team.tttt.pms.project.storage.service.PmsStorageService;
import team.tttt.pms.project.vo.PaginationInfoVO;

@Service
public class PmsStorageServiceImpl implements PmsStorageService {

	@Inject
	private PmsStorageMapper mapper;

	@Override
	public List<StorageVO> storageList(PaginationInfoVO<StorageVO> pagingVO) {

		return mapper.storageList(pagingVO);
	}

	@Override
	public StorageVO getDetailStorage(String storageNo) {


		return mapper.getDetailStorage(storageNo);

	}

	@Override
	public ServiceResult insertStorage(StorageVO insertStorage) {
		int cnt =0;

		cnt = mapper.insertStorage(insertStorage);

		if(cnt > 1){
			return ServiceResult.OK;

		}
		return ServiceResult.FAILED;
	}

	@Override
	public ServiceResult StorageUpdate(StorageVO updateStorage) {
		int cnt =0;

		cnt = mapper.StorageUpdate(updateStorage);

		if(cnt > 1){
			return ServiceResult.OK;

		}
		return ServiceResult.FAILED;
	}

	@Override
	public ServiceResult StorageDelete(String storageNo) {
		int cnt =0;

		cnt = mapper.StorageDelete(storageNo);

		if(cnt > 1){
			return ServiceResult.OK;

		}
		return ServiceResult.FAILED;
	}

	@Override
	public int selectBoardCount(PaginationInfoVO<StorageVO> pagingVO) {
		return mapper.selectBoardCount(pagingVO);
	}




}
