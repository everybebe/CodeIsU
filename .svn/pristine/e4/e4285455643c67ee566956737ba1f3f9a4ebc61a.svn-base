package team.tttt.pms.project.storage.web;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.apache.commons.collections.map.HashedMap;
import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import lombok.extern.slf4j.Slf4j;
import team.tttt.pms.common.enums.ServiceResult;
import team.tttt.pms.common.vo.StorageVO;
import team.tttt.pms.project.storage.service.PmsStorageService;
import team.tttt.pms.project.vo.PaginationInfoVO;

@RequestMapping("/pms/project")
@Slf4j
@Controller
public class PmsStorageController {

	@Inject
	PmsStorageService service;

	@GetMapping("/storage")
	public String getStorageList() {
		return "pms/com/storage";
	}

	@GetMapping("/storageList")
	@ResponseBody
	public Map<String, Object> storageList(PaginationInfoVO<StorageVO> vo) {

		PaginationInfoVO<StorageVO> pagingVO = new PaginationInfoVO<StorageVO>();

		Map<String, Object> StorageList = new HashMap<String, Object>();

		if(StringUtils.isNotBlank(vo.getSearchWord())) {
			pagingVO.setSearchType(vo.getSearchType());
			pagingVO.setSearchWord(vo.getSearchWord());
			StorageList.put("searchType", vo.getSearchType());
			StorageList.put("searchWord", vo.getSearchWord());
		}

		pagingVO.setCurrentPage(vo.getCurrentPage());

		pagingVO.setProjNo(vo.getProjNo());

		int totalRecord = service.selectBoardCount(pagingVO);
		pagingVO.setTotalRecord(totalRecord);

		List<StorageVO> dataList = service.storageList(pagingVO);

		pagingVO.setDataList(dataList);

		StorageList.put("pagingVO", pagingVO);

		return StorageList;
	}

	// 업무 상세보기
	@GetMapping("/StorageDetail")
	@ResponseBody
	public StorageVO getDetailStorage(String StorageNo) {
		System.out.println(StorageNo + "--------------- StorageNo getDetailStorage");
		StorageVO vo = service.getDetailStorage(StorageNo);
		return vo;
	}

	// 업무 삭제

	@DeleteMapping("/StorageDelete")
	@ResponseBody
	public String deleteStorage(@RequestBody String StorageNo) {

		String msg;

		ServiceResult result = service.StorageDelete(StorageNo);

		if (result.equals(ServiceResult.OK)) {
			msg = "성공";
		} else {
			msg = "실패";
		}
		return msg;
	}

	// 업무 추가
	@ResponseBody
	@PostMapping(value = "/insertStorage", produces = "application/json;charset=utf-8")
	public String insertStorage(@RequestBody StorageVO insertStorage) {

		ServiceResult result = service.insertStorage(insertStorage);

		String msg = "";

		if (result.equals(ServiceResult.OK)) {
			msg = "성공";
		} else {
			msg = "실패";
		}
		return msg;
	}

	// 일감 업데이트 모달창
	@ResponseBody
	@PutMapping(value = "/updateStorage", produces = "application/json;charset=utf-8")
	public String updateStorage(@RequestBody StorageVO updateStorage) {

		ServiceResult result = service.StorageUpdate(updateStorage);

		String msg = "";

		if (result.equals(ServiceResult.OK)) {
			msg = "성공";
		} else {
			msg = "실패";
		}
		return msg;
	}
}
